---
- name: "Pull EMQX image"
  containers.podman.podman_image:
    name: "{{ containers.mqtt.image }}"

- name: "Pull Proxy image"
  containers.podman.podman_image:
    name: "{{ containers.proxy.image }}"

- name: Create data directory
  file:
    path: "{{ host.mqtt.volumes.data }}"
    state: "directory"

- name: Create etc directoy
  file:
    path: "{{ host.mqtt.volumes.etc }}"
    state: "directory"

- name: Create log directory
  file:
    path: "{{ host.mqtt.volumes.log }}"
    state: "directory"

- name: Modify SELinux to allow necessary ports for Homebridge
  community.general.seport:
    ports: "{{ item.value.port }}"
    proto: "{{ item.value.proto }}"
    setype: "http_port_t"
    state: "present"
  loop: "{{ network.ports|dict2items }}"

- name: "Start EMQX"
  containers.podman.podman_container:
    name: "{{ containers.mqtt.name }}"
    image: "{{ containers.mqtt.image }}"
    state: "started"
    recreate: true
    env:
      "TZ": "{{ timezone }}"
      "EMQX_NAME": "lab-emqx"
      "EMQX_HOST": "127.0.0.1"
    expose:
      - "{{ network.ports.mqtt_tcp.expose }}"
      - "{{ network.ports.mqtt_ssl_tcp.expose }}"
      - "{{ network.ports.websocket_tcp.expose }}"
      - "{{ network.ports.websocket_ssl_tcp.expose }}"
      - "{{ network.ports.webui.expose }}"
    ports:
      - "{{ network.ports.mqtt_tcp.bind }}"
      - "{{ network.ports.mqtt_ssl_tcp.bind }}"
      - "{{ network.ports.websocket_tcp.bind }}"
      - "{{ network.ports.websocket_ssl_tcp.bind }}"
      - "{{ network.ports.webui.bind }}"
    volumes:
      - "{{ host.mqtt.volumes.data }}:{{ containers.mqtt.volumes.data }}:Z"
      - "{{ host.mqtt.volumes.etc }}:{{ containers.mqtt.volumes.etc }}:Z"
      - "{{ host.mqtt.volumes.log }}:{{ containers.mqtt.volumes.log }}:Z"
    restart_policy: always

- name: "Start Proxy"
  containers.podman.podman_container:
    name: "{{ containers.proxy.name }}"
    image: "{{ containers.proxy.image }}"
    state: "started"
    env:
      "TZ": "{{ timezone }}"
      "POCKETBASE_HOST": "http://192.168.1.121:3001"
    expose:
      - "{{ network.ports.proxy.expose }}"
    ports:
      - "{{ network.ports.proxy.bind }}"
    restart_policy: always
